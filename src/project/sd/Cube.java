/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project.sd;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Toolkit;
import static java.lang.Integer.max;
import static java.lang.Integer.min;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
import org.jfree.ui.ApplicationFrame;
import org.jfree.ui.RefineryUtilities;

/**
 *
 *
 */
public class Cube extends javax.swing.JFrame {

    /**
     * Creates new form Cube
     */
    public Cube() {
        this.setUndecorated (true);
        this.setVisible (true);
        this.setAlwaysOnTop (true);
        this.setResizable (false);

        initComponents();

        Toolkit tk = Toolkit.getDefaultToolkit();

        //int xsize,ysize;
        int xsize = (int) tk.getScreenSize().getWidth();
        int ysize = (int) tk.getScreenSize().getHeight();

        this.setSize (xsize,ysize);


    }

public class XYLineChart_AWT extends ApplicationFrame
    {
        public XYLineChart_AWT( String applicationTitle, String chartTitle, XYSeriesCollection dataset )
        {
            super(applicationTitle);
            this.setUndecorated(true);
            JFreeChart xylineChart = ChartFactory.createXYLineChart(chartTitle ,"Category" ,"Score" ,dataset ,PlotOrientation.VERTICAL ,true , true , false);

            ChartPanel chartPanel = new ChartPanel( xylineChart );
            chartPanel.setPreferredSize( new java.awt.Dimension( 1200 , 450 ) );
            XYPlot plot = xylineChart.getXYPlot( );
            XYLineAndShapeRenderer renderer = new XYLineAndShapeRenderer( );
            renderer.setSeriesPaint( 0 , Color.RED );
            renderer.setSeriesStroke( 0 , new BasicStroke( 1.0f ) );
            plot.setRenderer( renderer );
            setContentPane( chartPanel );
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jSpinner2 = new javax.swing.JSpinner();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel2.setFont(new java.awt.Font("Telenor", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Values of range:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(150, 620, 310, 50);

        jSpinner1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jSpinner1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner1StateChanged(evt);
            }
        });
        getContentPane().add(jSpinner1);
        jSpinner1.setBounds(390, 680, 60, 50);

        jSpinner2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jSpinner2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner2StateChanged(evt);
            }
        });
        getContentPane().add(jSpinner2);
        jSpinner2.setBounds(670, 680, 60, 50);

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(1280, 720, 55, 23);

        jButton2.setFont(new java.awt.Font("Telenor", 1, 24)); // NOI18N
        jButton2.setText("Low: ");
        getContentPane().add(jButton2);
        jButton2.setBounds(270, 680, 90, 50);

        jButton3.setFont(new java.awt.Font("Telenor", 1, 24)); // NOI18N
        jButton3.setText("High:");
        getContentPane().add(jButton3);
        jButton3.setBounds(550, 680, 90, 50);

        jLabel3.setFont(new java.awt.Font("Telenor", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Cube Function: f(x) = x3");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(460, 30, 470, 110);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon("G:\\background new.jpg")); // NOI18N
        jLabel1.setText("b:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 1450, 1010);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
new Options().setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jSpinner1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner1StateChanged
double i, x, y;
        int a, b, a1, b1;
        a=(int)jSpinner1.getValue();
        b=(int)jSpinner2.getValue();
        //Using jFreeChart to form the chart
        String s = "y = x3 from " + a + " to " + b;
        a1=min(a,b);
        b1=max(a,b);
        XYSeries graph = new XYSeries(s);
        for(i=a1; i<=b1; i+=0.01){
            x = i;
            y = x*x*x;
            graph.add(x,y);
        }
        XYSeriesCollection dataset = new XYSeriesCollection();
        dataset.addSeries(graph);
        XYLineChart_AWT chart = new XYLineChart_AWT("Graph", " ", dataset); // This constructor is given above
        chart.pack( );
        RefineryUtilities.centerFrameOnScreen( chart );
        chart.setVisible( true );
        chart.setAlwaysOnTop(true);        // TODO add your handling code here:
    }//GEN-LAST:event_jSpinner1StateChanged

    private void jSpinner2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner2StateChanged
double i, x, y;
        int a, b, a1, b1;
        a=(int)jSpinner1.getValue();
        b=(int)jSpinner2.getValue();
        //Using jFreeChart to form the chart
        String s = "y = x3 from " + a + " to " + b;
        a1=min(a,b);
        b1=max(a,b);
        XYSeries graph = new XYSeries(s);
        for(i=a1; i<=b1; i+=0.01){
            x = i;
            y = x*x*x;
            graph.add(x,y);
        }
        XYSeriesCollection dataset = new XYSeriesCollection();
        dataset.addSeries(graph);
        XYLineChart_AWT chart = new XYLineChart_AWT("Graph", " ", dataset); // This constructor is given above
        chart.pack( );
        RefineryUtilities.centerFrameOnScreen( chart );
        chart.setVisible( true );
        chart.setAlwaysOnTop(true);        // TODO add your handling code here:
    }//GEN-LAST:event_jSpinner2StateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cube.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cube.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cube.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cube.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cube().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    // End of variables declaration//GEN-END:variables
}
